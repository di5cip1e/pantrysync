rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserId() {
      return request.auth.uid;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && getUserId() == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow read: if isAuthenticated(); // Allow reading other users' basic info for household features
    }

    // Households collection
    match /households/{householdId} {
      // Allow reading households only if user is a member (using memberUserIds array)
      // Use get() with default empty array to safely access memberUserIds
      allow read: if isAuthenticated() && 
        getUserId() in resource.data.get('memberUserIds', []);
      
      // Allow creating households
      allow create: if isAuthenticated() && 
        request.resource.data.createdBy == getUserId() &&
        getUserId() in request.resource.data.memberUserIds;
      
      // Allow updating households if user is a member or joining via invite
      allow update: if isAuthenticated() && 
        (
          // Allow if user is already a member (for admin actions)
          getUserId() in resource.data.get('memberUserIds', []) ||
          // Allow if user is joining (adding themselves to memberUserIds)
          (
            !(getUserId() in resource.data.get('memberUserIds', [])) &&
            getUserId() in request.resource.data.get('memberUserIds', []) &&
            request.resource.data.get('memberUserIds', []).size() == resource.data.get('memberUserIds', []).size() + 1
          )
        );
      
      // Allow deleting if user created the household
      allow delete: if isAuthenticated() && 
        resource.data.createdBy == getUserId();
    }

    // Pantry Items collection
    match /pantryItems/{itemId} {
      allow read, create, update, delete: if isAuthenticated();
    }

    // Shopping Lists collection
    match /shoppingLists/{listId} {
      allow read, create, update, delete: if isAuthenticated();
    }

    // Activities collection (read-only for members, write for system)
    match /activities/{activityId} {
      allow read, create: if isAuthenticated();
      // Activities are immutable - no updates or deletes allowed
    }

    // Deny all other requests
    match /{document=**} {
      allow read, write: if false;
    }
  }
}